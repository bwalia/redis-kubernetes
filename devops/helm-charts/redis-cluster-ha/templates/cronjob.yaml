# Source: wf/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: wf-{{ .Values.namespace }}-db-backup-hourly
  namespace: {{ .Values.namespace }}
spec:
  schedule: "0 * * * *"
  #testing 1 min "0 */1 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: "wf-db-backup-{{ .Values.namespace }}-hourly"
            image: bwalia/redis:latest
            imagePullPolicy: Always
            command:
              - /bin/sh
              - -c
              - --
            args:
              - cp /tmp/configmap/backup-database.sh /usr/local/bin/backup-database.sh && chmod +x /usr/local/bin/backup-database.sh && bash /usr/local/bin/backup-database.sh
              # sleep infinity
            env:
              - name: DB_BACKUP_JOB_NAME
                value: wf-{{ .Values.namespace }}-db-backup-hourly
              - name: BACKUP_FREQUENCY
                value: hourly
            envFrom:
            resources:
              null
            volumeMounts:
              - name: redis-data-vol
                mountPath: /redis-dump
              - name: wf-env-vol-{{ .Values.namespace }}
                mountPath: "/tmp/secrets"
                readOnly: false
              - name: redis-bootstrap-cm-vol
                mountPath: "/tmp/configmap"
                readOnly: false
          volumes:
            - name: redis-data-vol
              persistentVolumeClaim:
                claimName: redis-{{ .Values.namespace }}-pvc
            - name: wf-env-vol-{{ .Values.namespace }}
              secret:
                secretName: wf-api-secret-{{ .Values.namespace }}
                items:
                - key: env_file
                  path: .env
                optional: false
            - name: redis-bootstrap-cm-vol
              configMap:
                name: redis-bootstrap-cm-{{ .Values.namespace }}
      backoffLimit: 0
---
# Source: wsl/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: wf-{{ .Values.namespace }}-db-backup-daily
  namespace: {{ .Values.namespace }}
spec:
  schedule: "0 4 * * *"
  #testing 1 min "0 */1 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: wf-db-backup-{{ .Values.namespace }}-daily
            image: bwalia/redis:latest
            imagePullPolicy: Always
            command:
              - /bin/sh
              - -c
              - --
            args:
              - cp /tmp/configmap/backup-database.sh /usr/local/bin/backup-database.sh && chmod +x /usr/local/bin/backup-database.sh && bash /usr/local/bin/backup-database.sh
              # cp /tmp/configmap/backup-database.sh /usr/local/bin/backup-database.sh && chmod +x /usr/local/bin/backup-database.sh && bash /usr/local/bin/backup-database.sh
              # sleep infinity
            env:
              - name: DB_BACKUP_JOB_NAME
                value: wf-{{ .Values.namespace }}-db-backup-daily
              - name: BACKUP_FREQUENCY
                value: daily
            envFrom:
            resources:
              null
            volumeMounts:
              - name: redis-data-vol
                mountPath: /redis-dump
              - name: wf-env-vol-{{ .Values.namespace }}
                mountPath: "/tmp/secrets"
                readOnly: false
              - name: redis-bootstrap-cm-vol
                mountPath: "/tmp/configmap"
                readOnly: false
          volumes:
            - name: redis-data-vol
              persistentVolumeClaim:
                claimName: redis-{{ .Values.namespace }}-pvc
            - name: wf-env-vol-{{ .Values.namespace }}
              secret:
                secretName: wf-api-secret-{{ .Values.namespace }}
                items:
                - key: env_file
                  path: .env
                optional: false
            - name: redis-bootstrap-cm-vol
              configMap:
                name: redis-bootstrap-cm-{{ .Values.namespace }}
      backoffLimit: 0
