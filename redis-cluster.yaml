apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: dev
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-bootstrap-cm-dev
  namespace: dev
data:
    redis-dump.sh: |
      echo "Dumping redis data"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-server
  namespace: dev
spec:
  serviceName: redis-server
  replicas: 1
  selector:
    matchLabels:
      app: redis-server
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis-server
    spec:
      initContainers:
      - name: redis-init
        image: busybox
        command: ["sh", "-c", "echo $MY_POD_IP > /redis-dump/ip.txt; echo 'Wrote the Pod IP to ip.txt'"]
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: redis-data-vol
          mountPath: /redis-dump
      - name: redis-dump
        image: busybox
        command: ["sh", "-c", "echo 'Hello, World! Your Pod IP is: ' > /redis-dump/index.html; cat /redis-dump/ip.txt >> /redis-dump/index.html; echo 'Created index.html with the Pod IP'"]
        volumeMounts:
        - name: redis-data-vol
          mountPath: /redis-dump
      containers:
      - name: redis-server
        image: bwalia/redis:latest
        volumeMounts:
        - name: redis-data-vol
          mountPath: /data
      volumes:
      - name: redis-data-vol
        persistentVolumeClaim:
          claimName: redis-pvc
        # emptyDir: {}
        # volumeMounts:
        # - name: redis-data
        #   mountPath: /data
        # - name: redis-bootstrap-cm-vol
        #   mountPath: /tmp/configmap
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: dev
spec:
  selector:
    app: redis-server
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
